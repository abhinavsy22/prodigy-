# ----------------------------
# ðŸ“Š Titanic Data Cleaning & EDA
# ----------------------------

# Install required libraries
!pip install pandas numpy matplotlib seaborn

# Import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# ----------------------------
# Step 1: Upload Titanic dataset
# ----------------------------
from google.colab import files
uploaded = files.upload()  # Choose 'train.csv' from your computer

# Load dataset
titanic = pd.read_csv(list(uploaded.keys())[0])

# ----------------------------
# Step 2: Initial Exploration
# ----------------------------
print("First 5 rows of dataset:")
print(titanic.head())

print("\nDataset info:")
print(titanic.info())

print("\nSummary statistics:")
print(titanic.describe(include="all"))

# ----------------------------
# Step 3: Data Cleaning
# ----------------------------
titanic['Age'].fillna(titanic['Age'].median(), inplace=True)
titanic['Embarked'].fillna(titanic['Embarked'].mode()[0], inplace=True)
titanic.drop(columns=['Cabin'], inplace=True)

print("\nMissing values after cleaning:")
print(titanic.isnull().sum())

# ----------------------------
# Step 4: EDA Visualizations
# ----------------------------

# Survival count
sns.countplot(x='Survived', data=titanic, palette='Set2')
plt.title("Survival Count")
plt.show()

# Survival by gender
sns.countplot(x='Sex', hue='Survived', data=titanic, palette='Set1')
plt.title("Survival by Gender")
plt.show()

# Survival by class
sns.countplot(x='Pclass', hue='Survived', data=titanic, palette='Set3')
plt.title("Survival by Passenger Class")
plt.show()

# Age distribution by survival
plt.figure(figsize=(8, 6))
sns.histplot(titanic[titanic['Survived'] == 1]['Age'], bins=30, color='green', kde=True, label='Survived')
sns.histplot(titanic[titanic['Survived'] == 0]['Age'], bins=30, color='red', kde=True, label='Not Survived')
plt.legend()
plt.title("Age Distribution by Survival")
plt.show()

# Correlation heatmap
plt.figure(figsize=(10, 8))
sns.heatmap(titanic.corr(numeric_only=True), annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap")
plt.show()

# Family size analysis
titanic['FamilySize'] = titanic['SibSp'] + titanic['Parch'] + 1
sns.countplot(x='FamilySize', hue='Survived', data=titanic, palette='cool')
plt.title("Survival by Family Size")
plt.show()

print("\nâœ… EDA Completed Successfully!")
